properties:
  - name: stage
    type: Hexagon::AdvancedComponentNavigator::Stage*
    init_with: nullptr
    constructor_arg: true
functions:
  - name: process_local_event
    guards: [ stage ]
    parameters:
      - name: event_name
        type: std::string
        default_argument: '""'
      - name: action_data
        type: ActionData
        default_argument: 'ActionData()'
    body: |
      using Hexagon::AdvancedComponentNavigator::Stage;
      Stage &stage = *this->stage;
      bool executed = false;

      std::map<std::string, std::function<void(Stage&)>> local_events = {
         { "refresh_list", &Stage::refresh_list },
         { "move_cursor_to_top", &Stage::move_cursor_to_top },
         { "move_cursor_up", &Stage::move_cursor_up },
         { "move_cursor_down", &Stage::move_cursor_down },
         { "set_mode_to_navigating_list", &Stage::set_mode_to_navigating_list },
         { "set_mode_to_typing_in_search_bar", &Stage::set_mode_to_typing_in_search_bar },
      };

      std::map<std::string, std::function<void(Stage&)>>::iterator it = local_events.find(event_name);
      if (it == local_events.end())
      {
         std::stringstream error_message;
         error_message << "AdvancedComponentNavigator::EventController::process_local_event: error: "
                       << "No local event named \"" << event_name << "\" exists.";
         throw std::runtime_error(error_message.str());
      }
      else
      {
         local_events[event_name](stage);
      }

      /*
      if (event_name == "refresh_list")
      {
        executed = true;
        stage.refresh_list();
      }
      else if (event_name == "move_cursor_to_top")
      {
        executed = true;
        stage.move_cursor_to_top();
      }
      else if (event_name == "move_cursor_up")
      {
        executed = true;
        stage.move_cursor_up();
      }
      else if (event_name == "move_cursor_down")
      {
        executed = true;
        stage.move_cursor_down();
      }
      else if (event_name == "set_mode_to_navigating_list")
      {
        executed = true;
        stage.set_mode_to_navigating_list();
      }
      else if (event_name == "set_mode_to_typing_in_search_bar")
      {
        executed = true;
        stage.set_mode_to_typing_in_search_bar();
      }
      */

      if (false) //(!executed)
      {
         std::stringstream error_message;
         error_message << "AdvancedComponentNavigator::EventController::process_local_event: error: "
                       << "No local event named \"" << event_name << "\" exists.";
         throw std::runtime_error(error_message.str());
      }
      return;
    body_dependency_symbols:
      - std::map<std::string, std::function>
      - Hexagon::AdvancedComponentNavigator::EventController
dependencies:
  - symbol: std::map<std::string, std::function>
    headers: [ map, string, functional ]
  - symbol: Hexagon::AdvancedComponentNavigator::Stage*
    headers: [ Hexagon/AdvancedComponentNavigator/Stage.hpp ]
  - symbol: Hexagon::AdvancedComponentNavigator::EventController
    headers: [ Hexagon/AdvancedComponentNavigator/EventController.hpp ]
  - symbol: ActionData
    headers: [ Hexagon/ActionData.hpp ]
