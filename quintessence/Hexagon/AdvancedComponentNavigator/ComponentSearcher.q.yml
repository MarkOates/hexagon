properties:
  - name: project_root_directory
    type: std::string
    default: "/Users/markoates/Repos/hexagon"
    constructor_arg: true
  - name: search_text
    type: std::string
    default: '""'
    constructor_arg: true
functions:
  - name: component_names
    type: std::vector<std::string>
    body: |
      std::vector<std::string> result_names = {};
      std::vector<std::string> elements = Blast::Project::ComponentLister(project_root_directory).components();
      if (search_text.empty()) return elements;
      Blast::SimpleTextSearcher searcher(search_text, elements);
      return searcher.results();
    body_dependency_symbols:
      - Blast::Project::ComponentLister
      - Blast::SimpleTextSearcher
  - name: components_sorted_by_most_recent
    type: std::vector<Blast::Project::Component>
    body: |
      std::vector<Blast::Project::Component> result;
      std::vector<std::string> component_names = {};
      component_names = Blast::Project::ComponentLister(project_root_directory).components_sorted_by_most_recent();
      for (auto &component_name : component_names)
      {
         result.push_back(Blast::Project::Component(component_name, project_root_directory));
      }
      return result;
    body_dependency_symbols:
      - Blast::Project::ComponentLister
  - name: components
    type: std::vector<Blast::Project::Component>
    body: |
      std::vector<Blast::Project::Component> result;
      std::vector<std::string> component_names = Blast::Project::ComponentLister(project_root_directory).components();
      for (auto &component_name : component_names)
      {
         result.push_back(Blast::Project::Component(component_name, project_root_directory));
      }
      return result;
    body_dependency_symbols:
      - Blast::Project::ComponentLister
dependencies:
  - symbol: std::vector<std::string>
    headers: [ 'vector', 'string' ]
  - symbol: Blast::Project::ComponentLister
    headers: [ 'Blast/Project/ComponentLister.hpp' ]
  - symbol: Blast::SimpleTextSearcher
    headers: [ 'Blast/SimpleTextSearcher.hpp' ]
  - symbol: std::vector<Blast::Project::Component>
    headers: [ vector, Blast/Project/Component.hpp ]
