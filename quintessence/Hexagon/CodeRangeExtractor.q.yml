properties:


  - name: lines
    type: std::vector<std::string>*
    init_with: nullptr
    constructor_arg: true

  - name: code_range
    type: CodeRange*
    init_with: nullptr
    constructor_arg: true


functions:


  - name: extract
    type: std::vector<std::string>
    guards: [ lines, code_range ]
    body: |
      CodePoint start = code_range->infer_cursor_start();
      CodePoint end = code_range->infer_cursor_end();

      int start_y = std::min(std::max(0, start.get_y()), (int)lines->size());
      int end_y = std::min(std::max(0, (end.get_y()+1)), (int)lines->size());

      std::cout << "CodeRangeExtractor: attempting extraction at (" << start_y << ", " << end_y << ")" << std::endl;

      std::vector<std::string> result(lines->begin() + start_y, lines->begin() + end_y);

      return result;
    body_dependency_symbols:
      - std::cout
      - std::min
      - std::max


dependencies:


  - symbol: CodeRange*
    headers: [ Hexagon/CodeRange.hpp ]
  - symbol: std::vector<std::string>*
    headers: [ vector, string ]
  - symbol: std::min
    headers: [ algorithm ]
  - symbol: std::max
    headers: [ algorithm ]


