properties:


  - name: code_message_points
    type: std::vector<CodeMessagePoint>
    init_with: '{}'
    getter: true


functions:


  - name: append
    parameters:
      - name: code_message_point
        type: CodeMessagePoint
        default_argument: '{ 0, 0, 0, 0, "", CodeMessagePoint::NONE }'
    body: |
      code_message_points.push_back(code_message_point);
      return;


  - name: clear
    body: |
      code_message_points.clear();
      return;


  - name: delete_row
    parameters:
      - name: row
        type: int
        default_argument: 0
    body: |
      for (int i=0; i<code_message_points.size(); i++)
      {
         if (code_message_points[i].get_y() == row)
         {
            code_message_points.erase(code_message_points.begin() + i);
            i--;
         }
         else if (code_message_points[i].get_y() >= row)
         {
            code_message_points[i].move_to(code_message_points[i].get_x(), code_message_points[i].get_y()-1);
         }
      }
      return;


  - name: insert_row
    body: |
      return;


dependencies:


  - symbol: CodeMessagePoint
    headers: [ Hexagon/CodeMessagePoint.hpp ]
  - symbol: std::vector<CodeMessagePoint>
    headers: [ vector, Hexagon/CodeMessagePoint.hpp ]

