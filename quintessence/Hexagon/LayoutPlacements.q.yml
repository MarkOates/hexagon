properties:


  - name: placements
    type: std::map<std::string, placement3d>
    getter: true
    getter_ref: true
    setter: true
    constructor_arg: true
    init_with: '{}'


functions:


  - name: placement_for
    type: placement3d
    parameters:
       - name: label
         type: std::string
         default_argument: '""'
    body: |
      std::map<std::string, placement3d>::iterator it;
      it = placements.find(label);
      if (it == placements.end())
      {
         std::stringstream error_message;
         error_message << "Could not find a layout position labeled \"" << label << "\"." << std::endl;
         throw std::runtime_error(error_message.str());
      }
      placement3d result = it->second;
      return result;
    body_dependency_symbols:
      - std::stringstream
      - std::runtime_error


dependencies:
  - symbol: std::stringstream
    headers: [ 'sstream' ]
  - symbol: std::runtime_error
    headers: [ 'stdexcept' ]
  - symbol: std::map<std::string, placement3d>
    headers: [ 'map', 'string', 'allegro_flare/placement3d.h' ]
  - symbol: placement3d
    headers: [ 'allegro_flare/placement3d.h' ]
