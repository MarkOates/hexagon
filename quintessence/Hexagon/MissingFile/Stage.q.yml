parent_classes:


  - class: 'StageInterface'
    scope: public
    init_with: "StageInterface::MISSING_FILE"


properties:


  - name: font_bin
    type: AllegroFlare::FontBin*
    init_with: nullptr
    constructor_arg: true
  - name: expected_filename
    type: std::string
    init_with: '"[Expected filename not set]"'
    constructor_arg: true
    getter: true
  - name: title_text
    type: std::string
    init_with: '"MISSING FILE"'
  - name: a_default_empty_event
    static: true
    type: ALLEGRO_EVENT
    init_with: "{}"
    getter_ref: true
  - name: is_focused
    type: bool
    init_with: true
    getter: true
    setter: true
  - name: display
    type: ALLEGRO_DISPLAY*
    init_with: nullptr
    getter: true
    setter: true
  - name: font
    type: ALLEGRO_FONT*
    init_with: nullptr
    getter: true
    setter: true
  - name: cell_width
    type: int
    init_with: 10
    getter: true
    setter: true
  - name: cell_height
    type: int
    init_with: 20
    getter: true
    setter: true


functions:


  - name: render
    virtual: true
    override: true
    guards: [ font_bin ]
    body: |
      placement3d place = get_place();
      place.start_transform();

      float padding = cell_width;
      float h_padding = (float)cell_width / 2;
      float line_height = al_get_font_line_height(font);
      ALLEGRO_FONT *title_font = obtain_title_font();

      float width = place.size.x;
      float height = place.size.y;
      ALLEGRO_COLOR color = al_color_html("d82133");
      float thickness = 2.5;

      al_draw_rectangle(
         h_padding, h_padding,
         width-h_padding, height-h_padding,
         color, thickness);

      //ALLEGRO_BITMAP *texture = nullptr;// TODO
      //Hexagon::Elements::TexturedRectangle red_lines_texture_background(
      //   h_padding,
      //   h_padding,
      //   width-h_padding,
      //   height-h_padding,
      //   texture
      //);
      //red_lines_texture_background.draw();

      al_draw_text(title_font, color, width/2, height/3, ALLEGRO_ALIGN_CENTER, title_text.c_str());

      al_draw_text(font, color, width/2, height/3 + line_height*3, ALLEGRO_ALIGN_CENTER, expected_filename.c_str());

      //std::string create_message = "Press ENTER to create (requires reload)";
      //al_draw_text(font, color, width/2, height/3 + line_height*9, ALLEGRO_ALIGN_CENTER, create_message.c_str());

      place.restore_transform();
    body_dependency_symbols:
      - Hexagon::Elements::TexturedRectangle
      - al_color_html
      - al_draw_rectangle
      - al_draw_text


  - name: obtain_text_font
    private: true
    type: ALLEGRO_FONT*
    guards: [ font_bin ]
    body: |
      return font_bin->auto_get("Menlo-Regular.ttf -20");


  - name: obtain_title_font
    private: true
    type: ALLEGRO_FONT*
    guards: [ font_bin ]
    body: |
      return font_bin->auto_get("EurostileExtendedBlack-aka-ExtendedBold.ttf -42");


  - name: process_local_event
    override: true
    parameters:
      - name: event_name
        type: std::string
        default_argument: "\"\""
      - name: action_data
        type: ActionData
        default_argument: "ActionData()"
    body: return;


  - name: process_event
    override: true
    parameters:
      - name: event
        type: ALLEGRO_EVENT&
        default_argument: "get_a_default_empty_event_ref()"
    body: return;


  - name: create_expected_file
    private: true
    body: |
      std::string initial_file_contents = "// empty";
      Blast::FileCreator file_creator(expected_filename, initial_file_contents);
      file_creator.create_if_not_exists();
      return;
    body_dependency_symbols:
      - Blast::FileCreator


dependencies:


  - symbol: ALLEGRO_DISPLAY*
    headers: [ allegro5/allegro.h ]
  - symbol: ALLEGRO_FONT*
    headers: [ allegro5/allegro_font.h ]
  - symbol: StageInterface
    headers: [ Hexagon/StageInterface.hpp ]
  - symbol: Blast::FileCreator
    headers: [ Blast/FileCreator.hpp ]
  - symbol: al_color_html
    headers: [ allegro5/allegro_color.h ]
  - symbol: al_draw_rectangle
    headers: [ allegro5/allegro_primitives.h ]
  - symbol: al_draw_text
    headers: [ allegro5/allegro_font.h ]
  - symbol: ALLEGRO_EVENT&
    headers: [ allegro5/allegro.h ]
  - symbol: ALLEGRO_EVENT
    headers: [ allegro5/allegro.h ]
  - symbol: ActionData
    headers: [ Hexagon/ActionData.hpp ]
  - symbol: AllegroFlare::FontBin*
    headers: [ AllegroFlare/FontBin.hpp ]
  - symbol: Hexagon::Elements::TexturedRectangle
    headers: [ Hexagon/Elements/TexturedRectangle.hpp ]


