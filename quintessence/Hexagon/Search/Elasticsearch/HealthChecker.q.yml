functions:
  - name: run
    type: std::string
    body: return "Hello World!";
  - name: get_health_check_shell_command
    type: std::string
    body: |
      std::string command = "curl -XGET \"http://localhost:9200/_cat/health\"";
      return command;
  - name: is_up
    type: bool
    body: |
      std::string health_response = request_health();
      std::string up_regex = "[0-9]+ [0-9]+:[0-9]+:[0-9]+ [0-0a-zA-Z_]+ (yellow|red|green) .+";
      RegexMatcher matcher(health_response, up_regex);
      std::vector<std::pair<int, int>> match_infos = matcher.get_match_info();
      if (match_infos.empty()) return false;
      if (health_response.empty()) return false;
      return true;
    body_dependency_symbols:
      - RegexMatcher
  - name: request_health
    type: std::string
    body: |
      std::string command = get_health_check_shell_command();
      Blast::ShellCommandExecutorWithCallback executor(command);
      std::string result = executor.execute();
      return result;
    body_dependency_symbols:
      - Blast::ShellCommandExecutorWithCallback
dependencies:
  - symbol: Blast::ShellCommandExecutorWithCallback
    headers: [ Blast/ShellCommandExecutorWithCallback.hpp ]
  - symbol: RegexMatcher
    headers: [ Hexagon/RegexMatcher.hpp ]

