properties:


  - name: dependents_json_filename
    type: std::string
    init_with: '"/Users/markoates/Repos/hexagon/documentation/dependents.json"'
    getter: true


functions:


  - name: build_dependent_names_for_component_name
    type: std::vector<std::string>
    parameters:
      - name: component_name
        type: std::string
        default_argument: '""'
    body: |
      nlohmann::json json = nlohmann::json::parse(dependents_json_file_contents());
      nlohmann::json json_elements_for_component_name = json[component_name];

      std::vector<std::string> result;
      for (nlohmann::json::iterator it = json_elements_for_component_name.begin();
           it != json_elements_for_component_name.end();
           ++it)
      {
          result.push_back(*it);
      }

      return result;
    body_dependency_symbols:
      - JSON


  - name: dependents_json_file_contents
    private: true
    type: std::string
    guards: [ dependents_json_file_exists() ]
    body: |
      return php::file_get_contents(dependents_json_filename);
    body_dependency_symbols:
      - Blast::FileExistenceChecker
      - php::file_get_contents


  - name: dependents_json_file_exists
    private: true
    type: bool
    body: |
      return Blast::FileExistenceChecker(dependents_json_filename).exists();
    body_dependency_symbols:
      - Blast::FileExistenceChecker


dependencies:


  - symbol: JSON
    headers: [ lib/nlohmann/json.hpp ]
  - symbol: php::file_get_contents
    headers: [ allegro_flare/useful_php.h ]
  - symbol: Blast::FileExistenceChecker
    headers: [ Blast/FileExistenceChecker.hpp ]


