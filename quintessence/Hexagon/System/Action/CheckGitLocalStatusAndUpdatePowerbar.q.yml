parent_classes:

  - class: ::Action
    scope: public
    init_with: '"Hexagon::System::Action::CheckGitLocalStatusAndUpdatePowerbar", ActionData()'

properties:

  - name: current_project_directory
    type: std::string
    init_with: '"/Users/markoates/Repos/hexagon/"'
    constructor_arg: true
    getter: true
  - name: powerbar
    type: Hexagon::Powerbar::Powerbar*
    init_with: nullptr
    constructor_arg: true

functions:

  - name: execute
    type: bool
    override: true
    guards: [ powerbar ]
    body: |
      Hexagon::Git::Modified modified(current_project_directory);
      std::vector<std::string> modified_files = modified.get_shell_response();

      Hexagon::Git::Untracked untracked(current_project_directory);
      std::vector<std::string> untracked_files = untracked.get_shell_response();

      Hexagon::Git::Staged staged(current_project_directory);
      std::vector<std::string> staged_files = staged.get_shell_response();

      bool files_are_modified = !modified_files.empty();
      powerbar->set_files_are_modified(files_are_modified);

      bool files_are_untracked = !untracked_files.empty();
      powerbar->set_files_are_untracked(files_are_untracked);

      bool files_are_staged = !staged_files.empty();
      powerbar->set_files_are_staged(files_are_staged);

      return true;
    body_dependency_symbols:
    - Hexagon::Git::Modified
    - Hexagon::Git::Untracked
    - Hexagon::Git::Staged

dependencies:

  - symbol: Hexagon::Powerbar::Powerbar*
    headers: [ Hexagon/Powerbar/Powerbar.hpp ]
  - symbol: Hexagon::Git::Modified
    headers: [ Hexagon/Git/Modified.hpp ]
  - symbol: Hexagon::Git::Untracked
    headers: [ Hexagon/Git/Untracked.hpp ]
  - symbol: Hexagon::Git::Staged
    headers: [ Hexagon/Git/Staged.hpp ]
  - symbol: ::Action
    headers: [ Hexagon/Action.hpp ]

