parent_classes:
  - class: ::Action
    scope: public
    init_with: "\"System::Action::AttemptToCreateStagesFromEntireFamilyOfComponent\", ActionData()"
properties:
  - name: component_name
    type: std::string
    constructor_arg: true
    getter: true
  - name: stages
    type: std::vector<StageInterface*>
    init_with: "{}"
functions:
  - name: create_code_editor_stages_for_component_names
    body: |
       return;
  - name: execute
    type: bool
    override: true
    body: |
      Blast::Project::Component component(get_component_name());
      if (!component.exists())
      {
         std::stringstream error_message;
         error_message << "["
                       << "Hexagon/System/Action/AttemptToCreateStagesForEntireFamilyOfComponent"
                       << " error:]"
                       << " can not execute with a component that does not exist.";
         throw std::runtime_error(error_message.str());
         return false;
      }

      Blast::Project::ComponentRelativeLister relative_lister(&component);
      std::vector<std::string> results = relative_lister.list_component_relative_names();

      // create_st

      return true;
    body_dependency_symbols:
      - Blast::Project::ComponentRelativeLister
      - std::stringstream
      - Blast::Project::Component
dependencies:
  - symbol: Blast::Project::ComponentRelativeLister
    headers: [ Blast/Project/ComponentRelativeLister.hpp ]
  - symbol: ::Action
    headers: [ Hexagon/Action.hpp ]
  - symbol: Blast::Project::Component
    headers: [ Blast/Project/Component.hpp ]
  - symbol: std::vector<StageInterface*>
    headers: [ vector, Hexagon/StageInterface.hpp ]
