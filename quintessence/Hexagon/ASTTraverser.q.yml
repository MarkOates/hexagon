properties:


  - name: json_ast_filename
    type: std::string
    constructor_arg: true
    init_with: '{}'
    getter: true
    setter: false

  - name: json
    type: nlohmann::json
    init_with: '{}'

  - name: initialized
    type: bool
    init_with: false


functions:


  - name: set_json_ast_filename
    guards: [ initialized ]
    type: void
    body: |
      return;


  - name: initialize
    type: void
    guards: [ (!initialized) ]
    body: |
      if (json_ast_filename.empty() || !Blast::FileExistenceChecker(json_ast_filename).exists())
      {
         std::stringstream error_message;
         error_message << "Hexagon::ASTTraverser error: "
                       << "The file \"" << json_ast_filename << "\" does not exist. "
                       << "The current path is \"" << std::filesystem::current_path() << "\"";
         throw std::runtime_error(error_message.str());
      }

      std::ifstream ifs(json_ast_filename);
      nlohmann::json json = nlohmann::json::parse(ifs);
      initialized = true;
      return;
    body_dependency_symbols:
      - std::ifstream
      - Blast::FileExistenceChecker


dependencies:


  - symbol: nlohmann::json
    headers: [ lib/nlohmann/json.hpp ]
  - symbol: std::ifstream
    headers: [ fstream ]
  - symbol: Blast::FileExistenceChecker
    headers: [ Blast/FileExistenceChecker.hpp ]


