properties:
  - name: display
    type: ALLEGRO_DISPLAY*
    init_with: nullptr
    constructor_arg: true
  - name: powerbar
    type: Hexagon::Powerbar::Powerbar*
    init_with: nullptr
    constructor_arg: true
  - name: width
    type: float
    init_with: 1000.0f
    constructor_arg: true
functions:
  - name: draw_individual_rectangle
    type: void
    private: true
    parameters:
      - name: x1
        type: float
        default_argument: 0.0f
      - name: y1
        type: float
        default_argument: 0.0f
      - name: x2
        type: float
        default_argument: 0.0f
      - name: y2
        type: float
        default_argument: 0.0f
    body: |
      float line_thickness = 3.0f;
      ALLEGRO_COLOR color = al_color_name("gray");
      al_draw_rectangle(x1, y1, x2, y2, color, line_thickness);
      return;
  - name: render
    type: void
    body: |
      if (!powerbar)
      {
         std::stringstream error_message;
         error_message << "[Hexagon/Powerbar/Renderer error:] cannot \"" << __FUNCTION__ << "\" with a nullptr powerbar";
         throw std::runtime_error(error_message.str());
      }

      float height = 40;
      float x = al_get_display_width(display) * 0.5;
      float y = al_get_display_height(display) - height * 2;
      float width = al_get_display_width(display) * 0.75f;
      float line_thickness = 3.0f;
      ALLEGRO_COLOR color = al_color_name("gray");

      float rectangle_width = width * 0.3333f;
      float h_width = rectangle_width * 0.5; //width * 0.3333f;
      float h_height = height * 0.5f;

      placement3d place(x, y, 0.0);

      place.start_transform();

      al_draw_rectangle(-h_width + rectangle_width*-1, -h_height, h_width + rectangle_width*-1, h_height, color, 3.0f);
      al_draw_rectangle(-h_width + rectangle_width*0, -h_height, h_width + rectangle_width*0, h_height, color, 3.0f);
      al_draw_rectangle(-h_width + rectangle_width*1, -h_height, h_width + rectangle_width*1, h_height, color, 3.0f);

      place.restore_transform();
    body_dependency_symbols:
      - std::stringstream
      - allegro_flare::placement3d
      - al_get_display_width
      - al_get_display_height
      - ALLEGRO_COLOR
      - al_color_name
      - al_draw_rectangle
dependencies:
  - symbol: allegro_flare::placement3d
    headers: [ allegro_flare/placement3d.h ]
  - symbol: al_get_display_width
    headers: [ allegro5/allegro.h ]
  - symbol: al_get_display_height
    headers: [ allegro5/allegro.h ]
  - symbol: Hexagon::Powerbar::Powerbar*
    headers: [ Hexagon/Powerbar/Powerbar.hpp ]
  - symbol: ALLEGRO_DISPLAY*
    headers: [ allegro5/allegro.h ]
  - symbol: ALLEGRO_COLOR
    headers: [ allegro5/allegro_color.h ]
  - symbol: al_color_name
    headers: [ allegro5/allegro_color.h ]
  - symbol: al_draw_rectangle
    headers: [ allegro5/allegro_primitives.h ]
