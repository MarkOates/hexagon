parent_classes:


  - class: 'StageInterface'
    scope: public
    init_with: 'LITTLE_MENU'


properties:


  - name: font_bin
    type: AllegroFlare::FontBin*
    init_with: nullptr
    constructor_arg: true
  - name: a_default_empty_event
    static: true
    type: ALLEGRO_EVENT
    init_with: "{}"
    getter_ref: true
  - name: title
    type: std::string
    init_with: '"Untitled Menu"'
    constructor_arg: true
  - name: items
    type: std::vector<std::tuple<std::string, std::string>>
    init_with: '{{"Foo", "foo"}, {"Bar", "bar"}, {"Baz", "baz"}}'
    constructor_arg: true
  - name: menu
    type: Hexagon::Elements::ListMenu
    init_with: 'font_bin, title, items'


functions:


  - name: render
    override: true
    body: |
      placement3d &place = get_place();
      place.start_transform();
      menu.render();
      place.restore_transform();
      return;


  - name: process_event
    override: true
    parameters:
      - name: event
        type: ALLEGRO_EVENT&
        default_argument: "get_a_default_empty_event_ref()"
    body: |
      switch(event.type)
      {
      case ALLEGRO_EVENT_KEY_CHAR:
        switch(event.keyboard.keycode)
        {
          case ALLEGRO_KEY_J:
            menu.move_cursor_down();
            break;
          case ALLEGRO_KEY_K:
            menu.move_cursor_up();
            break;
          case ALLEGRO_KEY_ENTER:
            emit_submission();
            break;
        }
        break;
      }
      return;


  - name: process_local_event
    override: true
    parameters:
      - name: event_name
        type: std::string
        default_argument: "\"\""
      - name: action_data
        type: ActionData
        default_argument: "ActionData()"
    body: |
      return;


  - name: emit_submission
    private: true
    body: |
      std::cout << "Sumitting Modal with selection \"" << menu.get_current_list_item_identifier() << "\"" << std::endl;
    body_dependency_symbols:
      - std::cout


dependencies:


  - symbol: StageInterface
    headers: [ Hexagon/StageInterface.hpp ]
  - symbol: AllegroFlare::FontBin*
    headers: [ AllegroFlare/FontBin.hpp ]
  - symbol: Hexagon::Elements::ListMenu
    headers: [ Hexagon/Elements/ListMenu.hpp ]
  - symbol: ActionData
    headers: [ 'Hexagon/ActionData.hpp' ]
  - symbol: std::vector<std::tuple<std::string, std::string>>
    headers: [ vector, tuple, string ]
  - symbol: ALLEGRO_EVENT
    headers: [ allegro5/allegro.h ]
  - symbol: ALLEGRO_EVENT&
    headers: [ allegro5/allegro.h ]


