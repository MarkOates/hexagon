properties:

  - name: text_lines
    type: std::vector<std::string>
    init_with: '{}'
    constructor_arg: true
  - name: width
    type: int
    init_with: 120
    constructor_arg: true

functions:

  - name: create
    type: ALLEGRO_BITMAP*
    guards: [ al_is_system_installed(), (!text_lines.empty()) ]
    body: |
      int height = text_lines.size();
      ALLEGRO_COLOR foreground_color = al_map_rgba_f(1.0f, 1.0f, 1.0f, 1.0f);
      ALLEGRO_COLOR background_color = al_map_rgba_f(0.0f, 0.0f, 0.0f, 1.0f);

      ALLEGRO_BITMAP *bitmap = al_create_bitmap(width, height * 2);

      ALLEGRO_STATE previous_render_state;
      al_store_state(&previous_render_state, ALLEGRO_STATE_TARGET_BITMAP);
      al_set_target_bitmap(bitmap);

      al_lock_bitmap(bitmap, ALLEGRO_PIXEL_FORMAT_ANY, ALLEGRO_LOCK_WRITEONLY);

      for (int y=0; y<text_lines.size(); y++)
      {
         std::string &line = text_lines[y];
         for (int x=0; x<width; x++)
         {
            if (x >= line.size() || line[x] == ' ') al_put_pixel(x, y*2, background_color);
            else al_draw_pixel(x, y*2, foreground_color);

            al_draw_pixel(x, (y*2) + 1, background_color);
         }
      }

      al_unlock_bitmap(bitmap);

      al_restore_state(&previous_render_state);

      return bitmap;
    body_dependency_symbols:
      - al_is_system_installed
      - std::vector<std::string>

dependencies:

  - symbol: al_is_system_installed
    headers: [ allegro5/allegro.h ]
  - symbol: ALLEGRO_BITMAP*
    headers: [ allegro5/allegro.h ]
  - symbol: std::vector<std::string>
    headers: [ vector, string ]

  - symbol: ALLEGRO_FONT
    headers: [ allegro5/allegro_font.h ]

