properties:


  - name: font_bin
    type: AllegroFlare::FontBin*
    init_with: nullptr
    constructor_arg: true
  - name: backfill_color
    type: ALLEGRO_COLOR*
    init_with: nullptr
    constructor_arg: true
    getter: true
  - name: backfill_opacity
    type: float
    init_with: 1.0f
    constructor_arg: true
    getter: true
  - name: place
    type: placement3d*
    init_with: nullptr
    constructor_arg: true
    getter: true
    setter: true
  - name: text
    type: std::string
    getter: true
    setter: true


functions:


  - name: render
    type: void
    guards: [ backfill_color, place ]
    body: |
      //if (!title_font) throw std::runtime_error("[StageInfoOverlay::render() error]: title_font can not be a nullptr");
      //if (!place) throw std::runtime_error("[StageInfoOverlay::render() error]: place can not be a nullptr");

      ALLEGRO_FONT *title_font = obtain_title_font();
      ALLEGRO_COLOR color_for_components = al_color_name("dodgerblue");
      ALLEGRO_COLOR primary_color = color_for_components; //al_color_name("orange");

      Hexagon::Elements::Frame outer_frame(place->size.x, place->size.y);
      outer_frame.set_outline_color(primary_color);
      outer_frame.render();

      float line_height = al_get_font_line_height(title_font);
      float text_width = al_get_text_width(title_font, text.c_str());
      //al_draw_filled_rectangle(0, 0, place->size.x, line_height*2, al_color_name("midnightblue"));
      ALLEGRO_COLOR color = primary_color;
      //al_draw_text(title_font, color, place->size.x/2, line_height/2, ALLEGRO_ALIGN_CENTER, text.c_str());
      float horizontal_padding = 40;
      float x1 = place->size.x/2-text_width/2 - horizontal_padding;
      float y1 = place->size.y/2-line_height/2;
      float x2 = x1 + text_width + horizontal_padding * 2;
      float y2 = y1 + line_height * 2;
      ALLEGRO_COLOR base_backfill_color = *get_backfill_color();
      ALLEGRO_COLOR backfill_color = color::color(base_backfill_color, get_backfill_opacity());
      al_draw_filled_rectangle(x1, y1, x2, y2, backfill_color);
      al_draw_rectangle(x1, y1, x2, y2, primary_color, 3.0f);
      //text_box_frame.set_outline_color(primary_color);
      //text_box_frame.render();
      al_draw_text(title_font, color, place->size.x/2, place->size.y/2, ALLEGRO_ALIGN_CENTER, text.c_str());
      return;
    body_dependency_symbols:
      - color::mix
      - Hexagon::Elements::Frame
      - al_draw_filled_rectangle
      - al_color_name
      - al_draw_text


  - name: obtain_title_font
    type: ALLEGRO_FONT*
    guards: [ font_bin ]
    body: |
      // TODO: guard with font_bin->get_initialized()
      return font_bin->auto_get("Eurostile.ttf 32");


dependencies:


  - symbol: ALLEGRO_COLOR*
    headers: [ allegro5/allegro_color.h ]
  - symbol: color::mix
    headers: [ 'allegro_flare/color.h' ]
  - symbol: AllegroFlare::FontBin*
    headers: [ AllegroFlare/FontBin.hpp ]
  - symbol: Hexagon::Elements::Frame
    headers: [ Hexagon/Elements/Frame.hpp ]
  - symbol: al_draw_filled_rectangle
    headers: [ 'allegro5/allegro_primitives.h' ]
  - symbol: al_color_name
    headers: [ 'allegro5/allegro_color.h' ]
  - symbol: placement3d*
    headers: [ 'allegro_flare/placement3d.h' ]
  - symbol: al_draw_text
    headers: [ 'allegro5/allegro.h' ]
  - symbol: ALLEGRO_FONT*
    headers: [ 'allegro5/allegro_font.h' ]
