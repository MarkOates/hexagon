properties:

  - name: filename
    type: std::string
    init_with: '""'
    constructor_arg: true
  - name: width
    type: int
    init_with: 120
    constructor_arg: true

functions:

  - name: create
    type: ALLEGRO_BITMAP*
    guards: [ al_is_system_installed() ]
    body: |
      if (!Blast::FileExistenceChecker(filename).exists())
      {
         std::stringstream error_message;
         error_message << "FilePixelPreviewCreator::create: error: the file \"" << filename << "\" does not exist.";
         throw std::runtime_error(error_message.str());
      }

      std::vector<std::string> lines = get_file_contents();

      Hexagon::Elements::TextPixelPreviewCreator text_pixel_preview_creator(lines);

      return text_pixel_preview_creator.create();
    body_dependency_symbols:
      - al_is_system_installed
      - Blast::FileExistenceChecker
      - Hexagon::Elements::TextPixelPreviewCreator

  - name: get_file_contents
    private: true
    type: std::vector<std::string>
    body: |
      std::string contents = php::file_get_contents(filename);
      return Blast::StringSplitter(contents, '\n').split();
    body_dependency_symbols:
      - php::file_get_contents
      - Blast::StringSplitter

dependencies:

  - symbol: al_is_system_installed
    headers: [ allegro5/allegro.h ]
  - symbol: ALLEGRO_BITMAP*
    headers: [ allegro5/allegro.h ]
  - symbol: Blast::FileExistenceChecker
    headers: [ Blast/FileExistenceChecker.hpp ]
  - symbol: Blast::StringSplitter
    headers: [ Blast/StringSplitter.hpp ]
  - symbol: php::file_get_contents
    headers: [ allegro_flare/useful_php.h ]
  - symbol: Hexagon::Elements::TextPixelPreviewCreator
    headers: [ Hexagon/Elements/TextPixelPreviewCreator.hpp ]

  - symbol: ALLEGRO_BITMAP
    headers: [ allegro5/allegro.h ]

