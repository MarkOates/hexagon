properties:


  - name: width
    type: float
    init_with: 0.0f
    getter: true
    setter: true
    constructor_arg: true
  - name: height
    type: float
    init_with: 0.0f
    getter: true
    setter: true
    constructor_arg: true
  - name: box_opacity
    type: float
    init_with: 0.0f
    getter: true
    setter: true
    constructor_arg: true
  - name: cell_padding
    type: float
    init_with: 0.0f
    getter: true
    setter: true
    constructor_arg: true
  - name: box_fill_color
    type: ALLEGRO_COLOR
    init_with: '{0.0f, 0.0f, 0.0f, 0.0f}'
    getter: true
    setter: true
    constructor_arg: true
  - name: header_bar_color
    type: ALLEGRO_COLOR
    init_with: '{0.0f, 0.0f, 0.0f, 0.0f}'
    getter: true
    setter: true
  - name: bottom_line_color
    type: ALLEGRO_COLOR
    init_with: '{0.0f, 0.0f, 0.0f, 0.0f}'
    getter: true
    setter: true
  - name: outer_line_color
    type: ALLEGRO_COLOR
    init_with: '{0.0f, 0.0f, 0.0f, 0.0f}'
    getter: true
    setter: true
  - name: header_baseline_color
    type: ALLEGRO_COLOR
    init_with: '{0.0f, 0.0f, 0.0f, 0.0f}'
    getter: true
    setter: true
  - name: top_left_little_bar_color
    type: ALLEGRO_COLOR
    init_with: '{0.0f, 0.0f, 0.0f, 0.0f}'
    getter: true
    setter: true
  - name: corner_squares_color
    type: ALLEGRO_COLOR
    init_with: '{0.0f, 0.0f, 0.0f, 0.0f}'
    getter: true
    setter: true
  - name: header_bar_height
    type: float
    init_with: 0.0f
    getter: true
    setter: true
  - name: header_baseline_thickness
    type: float
    init_with: 0.0f
    getter: true
    setter: true
  - name: header_bar_opacity
    type: float
    init_with: 0.0f
    getter: true
    setter: true
  - name: header_baseline_opacity
    type: float
    init_with: 0.0f
    getter: true
    setter: true
  - name: top_left_little_bar_width
    type: float
    init_with: 0.0f
    getter: true
    setter: true
  - name: outer_line_thickness
    type: float
    init_with: 0.0f
    getter: true
    setter: true
  - name: outer_line_opacity
    type: float
    init_with: 0.0f
    getter: true
    setter: true
  - name: bottom_line_thickness
    type: float
    init_with: 0.0f
    getter: true
    setter: true
  - name: bottom_line_opacity
    type: float
    init_with: 0.0f
    getter: true
    setter: true
  - name: corner_squares_resize_from_center
    type: bool
    init_with: false
    getter: true
    setter: true
  - name: corner_squares_width
    type: float
    init_with: 0.0f
    getter: true
    setter: true
  - name: corner_squares_height
    type: float
    init_with: 0.0f
    getter: true
    setter: true
  - name: corner_squares_opacity
    type: float
    init_with: 0.0f
    getter: true
    setter: true
  - name: corner_squares_are_circles
    type: bool
    init_with: false
    getter: true
    setter: true
  - name: number_of_rows
    type: int
    init_with: 1
    getter: true
    setter: true
  - name: number_of_columns
    type: int
    init_with: 1
    getter: true
    setter: true
  - name: distance_of_rows
    type: float
    init_with: 0.0f
    getter: true
    setter: true
  - name: distance_of_columns
    type: float
    init_with: 0.0f
    getter: true
    setter: true


functions:


  - name: draw
    type: void
    guards: [ al_is_system_installed(), al_is_primitives_addon_initialized(), al_get_target_bitmap() ]
    body: |
      ALLEGRO_COLOR final_box_fill_color = color::color(box_fill_color, box_opacity);
      al_draw_filled_rectangle(
         0+cell_padding,
         0+cell_padding,
         width-cell_padding,
         height-cell_padding,
         final_box_fill_color
      );

      ALLEGRO_COLOR final_outer_line_color = color::color(outer_line_color, outer_line_opacity);
      al_draw_rectangle(
        0,
        0,
        width,
        height,
        final_outer_line_color,
        outer_line_thickness
      );

      draw_header_bar();
      draw_header_baseline();
      draw_top_left_little_bar();
      draw_bottom_line();
      if (corner_squares_are_circles) draw_corner_circles();
      else draw_corner_squares();

      return;
    body_dependency_symbols:
      - al_is_system_installed
      - al_is_primitives_addon_initialized
      - al_draw_rectangle
      - al_color_name
      - color::color


  - name: draw_top_left_little_bar
    private: true
    body: |
      al_draw_filled_rectangle(0, 0, top_left_little_bar_width, header_bar_height, top_left_little_bar_color);
      return;


  - name: draw_header_baseline
    private: true
    body: |
      ALLEGRO_COLOR final_header_baseline_color = color::color(header_baseline_color, header_baseline_opacity);
      al_draw_filled_rectangle(
         0,
         header_bar_height,
         width,
         header_bar_height+header_baseline_thickness,
         final_header_baseline_color
      );
      return;


  - name: draw_bottom_line
    private: true
    body: |
      ALLEGRO_COLOR final_bottom_line_color = color::color(bottom_line_color, bottom_line_opacity);
      float bottom_line_y = height + outer_line_thickness * 0.5f;
      al_draw_filled_rectangle(
         -outer_line_thickness * 0.5,
         bottom_line_y,
         width + outer_line_thickness * 0.5,
         bottom_line_y+bottom_line_thickness,
         final_bottom_line_color
      );
      return;


  - name: draw_header_bar
    private: true
    body: |
      ALLEGRO_COLOR final_header_bar_color = color::color(header_bar_color, header_bar_opacity);
      al_draw_filled_rectangle(0, 0, width, header_bar_height, final_header_bar_color);
      return;


  - name: draw_corner_circles
    private: true
    body: |
      ALLEGRO_COLOR final_corner_squares_color = color::color(corner_squares_color, corner_squares_opacity);
      float x_offset = corner_squares_resize_from_center ? corner_squares_width * 0.5f : 0.0f;
      float y_offset = corner_squares_resize_from_center ? corner_squares_height * 0.5f : 0.0f;

      // top left
      al_draw_filled_circle(0, 0, corner_squares_width * 0.5f, final_corner_squares_color);
      // top right
      al_draw_filled_circle(width, 0, corner_squares_width * 0.5f, final_corner_squares_color);
      // bottom left
      al_draw_filled_circle(0, height, corner_squares_width * 0.5f, final_corner_squares_color);
      // bottom right
      al_draw_filled_circle(width, height, corner_squares_width * 0.5f, final_corner_squares_color);
      return;


  - name: draw_corner_squares
    private: true
    body: |
      ALLEGRO_COLOR final_corner_squares_color = color::color(corner_squares_color, corner_squares_opacity);
      float x_offset = corner_squares_resize_from_center ? corner_squares_width * 0.5f : 0.0f;
      float y_offset = corner_squares_resize_from_center ? corner_squares_height * 0.5f : 0.0f;

      // top left
      al_draw_filled_rectangle(
         0 - x_offset,
         0 - y_offset,
         corner_squares_width - x_offset,
         corner_squares_height - y_offset,
         final_corner_squares_color
      );
      // top right
      al_draw_filled_rectangle(
         width - corner_squares_width + x_offset,
         0 - y_offset,
         width + x_offset,
         corner_squares_height - y_offset,
         final_corner_squares_color
      );
      // bottom left
      al_draw_filled_rectangle(
         0 - x_offset,
         height - corner_squares_height + y_offset,
         corner_squares_width - x_offset,
         height + y_offset,
         final_corner_squares_color
      );
      // bottom right
      al_draw_filled_rectangle(
         width - corner_squares_width + x_offset,
         height - corner_squares_height + y_offset,
         width + x_offset,
         height + y_offset,
         final_corner_squares_color
      );
      return;


dependencies:


  - symbol: ALLEGRO_COLOR
    headers: [ allegro5/allegro_color.h ]
  - symbol: al_is_system_installed
    headers: [ allegro5/allegro.h ]
  - symbol: al_is_primitives_addon_initialized
    headers: [ allegro5/allegro_primitives.h ]
  - symbol: al_draw_rectangle
    headers: [ allegro5/allegro_primitives.h ]
  - symbol: al_color_name
    headers: [ allegro5/allegro_color.h ]
  - symbol: color::color
    headers: [ allegro_flare/color.h ]
