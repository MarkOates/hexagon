properties:


  - name: grid
    type: std::vector<std::vector<std::tuple<char, ALLEGRO_COLOR, ALLEGRO_COLOR>>>&
    init_with: 'get_dummy_grid_ref()'
  - name: dummy_grid
    static: true
    type: std::vector<std::vector<std::tuple<char, ALLEGRO_COLOR, ALLEGRO_COLOR>>>
    init_with: '{}'
    getter_ref: true
  - name: vertexes
    type: std::vector<ALLEGRO_VERTEX>
    init_with: '{}'
  - name: num_columns
    type: int
    init_with: 0
    getter: true
  - name: num_rows
    type: int
    init_with: 0
    getter: true
  - name: cell_width
    type: float
    init_with: 1.0f
    getter: true
  - name: cell_height
    type: float
    init_with: 1.0f
    getter: true


functions:


  - name: resize
    type: bool
    parameters:
      - name: num_columns
        type: int
        default_argument: 0
      - name: num_rows
        type: int
        default_argument: 0
      - name: cell_width
        type: float
        default_argument: 0.0f
      - name: cell_height
        type: float
        default_argument: 0.0f
    body: |
      vertexes.clear();
      vertexes.resize(num_columns*num_rows*6); // 6 vertexes per rectangle
      this->num_columns = num_columns;
      this->num_rows = num_rows;
      this->cell_width = cell_width;
      this->cell_height = cell_height;


  - name: render
    type: void
    guards: [ al_is_system_installed() ]
    body: |
      ALLEGRO_BITMAP *tile_atlas_bitmap = nullptr;
      al_draw_prim(&vertexes[0], NULL, tile_atlas_bitmap, 0, vertexes.size(), ALLEGRO_PRIM_TRIANGLE_LIST);
      return;
    body_dependency_symbols:
      - ALLEGRO_BITMAP*


dependencies:


  - symbol: ALLEGRO_BITMAP*
    headers: [ allegro5/allegro.h ]
  - symbol: std::vector<ALLEGRO_VERTEX>
    headers: [ vector, allegro5/allegro_primitives.h ]
  - symbol: std::vector<std::vector<std::tuple<char, ALLEGRO_COLOR, ALLEGRO_COLOR>>>&
    headers: [ vector, tuple, allegro5/allegro.h ]
  - symbol: std::vector<std::vector<std::tuple<char, ALLEGRO_COLOR, ALLEGRO_COLOR>>>
    headers: [ vector, tuple, allegro5/allegro.h ]
