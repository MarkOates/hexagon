properties:


  - name: vertexes
    type: std::vector<ALLEGRO_VERTEX>
    init_with: '{}'
    getter: true

  - name: cell_width
    type: int
    init_with: 1
    constructor_arg: true

  - name: cell_height
    type: int
    init_with: 1
    constructor_arg: true

  - name: texture
    type: ALLEGRO_BITMAP*
    init_with: nullptr
    getter: true
    setter: true
    constructor_arg: true

  - name: cells
    type: std::map<std::tuple<int, int>, int>
    init_with: '{}'


documentation:


  - primary: |-
      Currently it seems this component is unused.  I belive it's undeveloped and superseeded with other mesh offerings.


functions:


  - name: create_or_set_cell
    parameters:
      - name: x
        type: int
        default_argument: 0
      - name: y
        type: int
        default_argument: 0
      - name: u1
        type: int
        default_argument: 0
      - name: v1
        type: int
        default_argument: 0
      - name: u2
        type: int
        default_argument: 0
      - name: v2
        type: int
        default_argument: 0
      - name: color
        type: ALLEGRO_COLOR
        default_argument: '{0.0f, 0.0f, 0.0f, 0.0f}'
    body: |
      int vertex_start = cells[std::tuple<int, int>(x, y)];
      int &v = vertex_start;

      // set the XY coordinates for the vertexes in the cell
      //long tile_num = v / 6;

      int x1 = x * cell_width; //(tile_num % num_columns);
      int y1 = y * cell_height; //(tile_num / num_columns);
      int x2 = x1 + cell_width;
      int y2 = y1 + cell_height;

      // set the x/y coordinates for the vertexes
      vertexes[v+0].x = x1;
      vertexes[v+0].y = y1;
      vertexes[v+1].x = x1;
      vertexes[v+1].y = y2;
      vertexes[v+2].x = x2;
      vertexes[v+2].y = y2;
      vertexes[v+3].x = x2;
      vertexes[v+3].y = y2;
      vertexes[v+4].x = x2;
      vertexes[v+4].y = y1;
      vertexes[v+5].x = x1;
      vertexes[v+5].y = y1;

      // set the UV coordinates for the vertexes in the cell
      vertexes[vertex_start+0].u = u1;
      vertexes[vertex_start+0].v = v1;
      vertexes[vertex_start+1].u = u1;
      vertexes[vertex_start+1].v = v2;
      vertexes[vertex_start+2].u = u2;
      vertexes[vertex_start+2].v = v2;
      vertexes[vertex_start+3].u = u2;
      vertexes[vertex_start+3].v = v2;
      vertexes[vertex_start+4].u = u2;
      vertexes[vertex_start+4].v = v1;
      vertexes[vertex_start+5].u = u1;
      vertexes[vertex_start+5].v = v1;

      return;


  - name: delete_cell
    parameters:
      - name: x
        type: int
        default_argument: 0
      - name: y
        type: int
        default_argument: 0
    body: return;


  - name: render
    type: void
    body: |
      al_draw_prim(
         &vertexes[0],
         nullptr,
         texture,
         0,
         vertexes.size(),
         ALLEGRO_PRIM_TRIANGLE_LIST
      );
      return;


dependencies:


  - symbol: ALLEGRO_COLOR
    headers: [ allegro5/allegro_color.h ]
  - symbol: ALLEGRO_BITMAP
    headers: [ allegro5/allegro.h ]
  - symbol: ALLEGRO_VERTEX
    headers: [ allegro5/allegro_primitives.h ]


