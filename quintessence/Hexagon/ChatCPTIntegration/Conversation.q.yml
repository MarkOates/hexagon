properties:


  - name: messages
    type: std::vector<Hexagon::ChatCPTIntegration::Messages::Base*>
    init_with: ''


functions:


  - name: append_text_message
    parameters:
      - name: body
        type: std::string
        default_argument: '"[unset-append_text_message]"'
    body: |
      Hexagon::ChatCPTIntegration::Messages::Text *result = new Hexagon::ChatCPTIntegration::Messages::Text(body);
      messages.push_back(result);
      return;
    body_dependency_symbols:
      - Hexagon::ChatCPTIntegration::Messages::Text


  - name: get_last_n_messages
    type: std::vector<Hexagon::ChatCPTIntegration::Messages::Base*>
    parameters:
      - name: count
        type: uint32_t
        default_argument: 3
    body: |
       std::vector<Messages::Base*> lastNMessages;

       // Make sure n is not greater than the number of messages in the vector
       if (count > messages.size()) {
           count = messages.size();
       }

       // Start from the end of the vector and work backwards, adding the
       // last n messages to the lastNMessages vector
       for (int i = messages.size() - 1; i >= messages.size() - count; i--) {
           lastNMessages.push_back(messages[i]);
       }

       return lastNMessages;


dependencies:


  - symbol: Hexagon::ChatCPTIntegration::Messages::Base
    headers: [ Hexagon/ChatCPTIntegration/Messages/Base.hpp ]
  - symbol: Hexagon::ChatCPTIntegration::Messages::Text
    headers: [ Hexagon/ChatCPTIntegration/Messages/Text.hpp ]


