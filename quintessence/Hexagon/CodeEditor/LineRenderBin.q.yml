parent_classes:


  - class: AllegroFlare::Bin<std::string, ALLEGRO_BITMAP *>
    scope: public
    init_with: ''


properties:


  - name: font
    type: ALLEGRO_FONT*
    init_with: nullptr
    constructor_arg: true


functions:


  - name: load_data
    virtuall: true
    override: true
    type: ALLEGRO_BITMAP*
    parameters:
      - name: identifier
        type: std::string
        default_argument: '""'
    body: |
      std::string text_to_render = identifier;
      ALLEGRO_BITMAP *render = nullptr;

      {
         int line_height = al_get_font_line_height(font);
         int bitmap_width = al_get_text_width(font, text_to_render.c_str());
         int bitmap_height = line_height;
         render = al_create_bitmap(bitmap_width, bitmap_height);

         {
            ALLEGRO_STATE previous_render_state;
            al_store_state(&previous_render_state, ALLEGRO_STATE_TARGET_BITMAP);
            al_set_target_bitmap(render);
            al_clear_to_color(al_map_rgba_f(0.0f, 0.0f, 0.0f, 0.0f));

            {
               //al_draw_text(font, al_color_name("white"), 0, 0, 0, text_to_render.c_str());
            }
            {
               ALLEGRO_COLOR color = al_color_name("white");
               Hexagon::CodeEditor::Renderer::AdvancedLineRenderer renderer(font, &color, 0, 0, text_to_render.c_str());
               renderer.render();
               //al_draw_text(font, al_color_name("white"), 0, 0, 0, text_to_render.c_str());
            }

            al_restore_state(&previous_render_state);
         }
      }

      return render;
    body_dependency_symbols:
      - al_color_name
      - al_draw_text
      - Hexagon::CodeEditor::Renderer::AdvancedLineRenderer


  - name: destroy_data
    virtuall: true
    override: true
    type: void
    parameters:
      - name: resource
        type: ALLEGRO_BITMAP*
        default_argument: 'nullptr'
    body: |
      al_destroy_bitmap(resource);
      return;


dependencies:


  - symbol: AllegroFlare::Bin<std::string, ALLEGRO_BITMAP *>
    headers: [ AllegroFlare/Bin.hpp, allegro5/allegro.h ]
  - symbol: Hexagon::CodeEditor::CachedLineRenderer
    headers: [ Hexagon/CodeEditor/CachedLineRenderer.hpp ]
  - symbol: std::map<std::string, int>
    headers: [ map, string ]
  - symbol: ALLEGRO_FONT*
    headers: [ allegro5/allegro_font.h ]
  - symbol: al_draw_text
    headers: [ allegro5/allegro_font.h ]
  - symbol: al_color_name
    headers: [ allegro5/allegro_color.h ]
  - symbol: ALLEGRO_BITMAP*
    headers: [ allegro5/allegro.h ]
  - symbol: Hexagon::CodeEditor::Renderer::AdvancedLineRenderer
    headers: [ Hexagon/CodeEditor/Renderer/AdvancedLineRenderer.hpp ]
  - symbol: Hexagon::RendererInterface*
    headers: [ Hexagon/RendererInterface.hpp ]
