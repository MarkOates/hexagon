properties:


  - name: stage
    type: Hexagon::AdvancedCodeEditor::Stage*
    init_with: nullptr
  - name: a_default_empty_event
    static: true
    type: ALLEGRO_EVENT
    init_with: "{}"
    getter_ref: true


functions:


  - name: process_local_event
    type: void
    parameters:
      - name: event_name
        type: std::string
        default_argument: '""'
      - name: action_data
        type: ActionData
        default_argument: "ActionData()"
    body: |
      std::map<std::string, std::function<void(AdvancedCodeEditor::Stage&)>> local_events_dictionary =
         build_local_events_dictionary();
      return;


  - name: process_event
    parameters:
      - name: event
        type: ALLEGRO_EVENT&
        default_argument: "get_a_default_empty_event_ref()"
    body: |
      return;


  - name: build_local_events_dictionary
    type: std::map<std::string, std::function<void(AdvancedCodeEditor::Stage&)>>
    body: |
      std::map<std::string, std::function<void(AdvancedCodeEditor::Stage&)>> local_events = {
         { "cursor_move_up", &AdvancedCodeEditor::Stage::cursor_move_up },
      };
      return local_events;


dependencies:


  - symbol: Hexagon::AdvancedCodeEditor::Stage*
    headers: [ Hexagon/AdvancedCodeEditor/Stage.hpp ]
  - symbol: ActionData
    headers: [ Hexagon/ActionData.hpp ]
  - symbol: ALLEGRO_EVENT
    headers: [ allegro5/allegro.h ]
  - symbol: ALLEGRO_EVENT&
    headers: [ allegro5/allegro.h ]
  - symbol: std::map<std::string, std::function<void(AdvancedCodeEditor::Stage&)>>
    headers: [ map, string, functional, Hexagon/AdvancedCodeEditor/Stage.hpp ]
