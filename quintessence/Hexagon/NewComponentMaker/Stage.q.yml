properties:

  - name: current_project_directory
    type: std::string
    init_with: '"/Users/markoates/Repos/hexagon/"'
    constructor_arg: true
    getter: true
  - name: shell_command_has_executed
    type: bool
    init_with: false
  - name: last_executed_shell_response
    type: std::string
    init_with: '""'
  - name: command
    stagic: true
    type: std::string
    init_with: '"git diff --name-only"'

functions:

  - name: get_shell_response
    type: std::string
    body: |
      if (shell_command_has_executed) return last_executed_shell_response;
      Blast::ShellCommandExecutorWithCallback executor(
            build_shell_command(),
            Blast::ShellCommandExecutorWithCallback::simple_silent_callback
         );
      last_executed_shell_response = executor.execute();
      return last_executed_shell_response;
    body_dependency_symbols:
      - std::stringstream
      - Blast::ShellCommandExecutorWithCallback
      - Blast::StringSplitter

  - name: get_shell_response_lines
    type: std::vector<std::string>
    body: |
      return Blast::StringSplitter(get_shell_response(), '\n').split();
    body_dependency_symbols:
      - std::stringstream
      - Blast::ShellCommandExecutorWithCallback
      - Blast::StringSplitter

  - name: build_shell_command
    type: std::string
    private: true
    body: |
      std::stringstream commit_everything_shell_command;
      commit_everything_shell_command << "("
                                      << "cd " << current_project_directory
                                      << " && "
                                      << command
                                      << ")";

      return commit_everything_shell_command.str();

dependencies:

  - symbol: Blast::ShellCommandExecutorWithCallback
    headers: [ Blast/ShellCommandExecutorWithCallback.hpp ]
  - symbol: Blast::StringSplitter
    headers: [ 'Blast/StringSplitter.hpp' ]

