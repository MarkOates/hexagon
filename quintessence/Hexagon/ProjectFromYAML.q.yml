properties:


  - name: name
    type: std::string
    init_with: '"Untitled"'
    constructor_arg: true
  - name: source_yaml
    type: std::string
    init_with: '"# empty"'
    constructor_arg: true


functions:


  - name: load
    type: Hexagon::Project
    body: |
      YAML::Node node = YAML::Load(source_yaml);
      Hexagon::Project project(name);

      YAML::Node layouts_node = node["components"];
      std::vector<std::tuple<std::string, Hexagon::Layout>> layouts;
      for (std::size_t i=0;i<layouts_node.size();i++)
      {
         YAML::Node layout_node = layouts_node[i];
         Hexagon::Layout layout = Hexagon::LayoutFromYAML(layout_node).load();
         std::string layout_label = layout.get_concept_name();

         layouts.push_back({layout_label, layout});
      }

      project.set_layouts(layouts);

      return project;
    body_dependency_symbols:
      - Hexagon::LayoutFromYAML
      - Hexagon::Project
      - YAML::Node


dependencies:


  - symbol: Hexagon::LayoutFromYAML
    headers: [ Hexagon/LayoutFromYAML.hpp ]
  - symbol: Hexagon::Project
    headers: [ Hexagon/Project.hpp ]
  - symbol: YAML::Node
    headers: [ yaml-cpp/yaml.h ]

