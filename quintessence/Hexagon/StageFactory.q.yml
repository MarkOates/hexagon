properties:


  - name: config
    type: Hexagon::System::Config*
    init_with: nullptr
    constructor_arg: true


functions:


  - name: obtain_default_navigator_directory
    type: std::string
    guards: [ config ]
    body: |
      return config->get_default_navigator_directory();


  - name: obtain_base_text_color
    type: ALLEGRO_COLOR
    guards: [ config ]
    body: |
      return config->get_base_text_color();


  - name: obtain_base_backfill_color
    type: ALLEGRO_COLOR
    guards: [ config ]
    body: |
      return config->get_backfill_color();


  - name: create
    type: StageInterface*
    body: |
      return nullptr;


  - name: create_advanced_component_navigator
    type: StageInterface*
    body: |
      Hexagon::AdvancedComponentNavigator::Stage *result =
         new Hexagon::AdvancedComponentNavigator::Stage(obtain_default_navigator_directory());

      result->process_local_event("refresh_list"); // TODO: find a test technique for this,
                                                   // I feel like this event should not be run real-time
                                                   // it's blocking and requests from the filesystem so
                                                   // this refresh should be part of an operation that
                                                   // happens after the creation, or something like that
      result->set_render_on_hud(true);
      result->set_base_text_color(obtain_base_text_color());
      result->set_base_backfill_color(obtain_base_backfill_color());
      result->set_place(build_component_navigator_initial_place());

      // TODO: consider animation

      return result;
    body_dependency_symbols:
      - Hexagon::AdvancedComponentNavigator::Stage


  - name: get_current_display
    private: true
    type: ALLEGRO_DISPLAY*
    guards: [ al_is_system_installed(), al_get_current_display() ]
    body: |
      return al_get_current_display();
    body_dependency_symbols:
      - al_get_current_display


  - name: build_component_navigator_initial_place
    private: true
    type: placement3d
    body: |
      ALLEGRO_DISPLAY *display = get_current_display();
      placement3d result;
      result.position = vec3d(al_get_display_width(display)/2, al_get_display_height(display)/2, 0);
      result.size = vec3d(800, 700, 0);
      result.align = vec3d(0.5, 0.5, 0.5);
      result.scale = vec3d(1.0, 1.0, 1.0);
      result.rotation = vec3d(0.0, 0.0, 0.0);
      return result;


dependencies:


  - symbol: Hexagon::AdvancedComponentNavigator::Stage
    headers: [ Hexagon/AdvancedComponentNavigator/Stage.hpp ]
  - symbol: StageInterface*
    headers: [ Hexagon/StageInterface.hpp ]
  - symbol: Hexagon::System::Config*
    headers: [ Hexagon/System/Config.hpp ]
  - symbol: placement3d
    headers: [ allegro_flare/placement3d.h ]
  - symbol: ALLEGRO_COLOR
    headers: [ allegro5/allegro.h ]
  - symbol: ALLEGRO_DISPLAY*
    headers: [ allegro5/allegro.h ]
  - symbol: al_get_current_display
    headers: [ allegro5/allegro.h ]

