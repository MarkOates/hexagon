properties:
  - name: current_project_directory
    type: std::string
    init_with: "\"/Users/markoates/Repos/hexagon/\""
    constructor_arg: true
  - name: message
    type: std::string
    init_with: "\"auto commit\""
    constructor_arg: true
functions:
  - name: build_sanitized_commit_message
    type: std::string
    body: |
      std::string sanitized_commit_message = std::string("* ") + message;
      std::replace(sanitized_commit_message.begin(), sanitized_commit_message.end(), '\\', '#');
      std::replace(sanitized_commit_message.begin(), sanitized_commit_message.end(), '"', '#');
      std::replace(sanitized_commit_message.begin(), sanitized_commit_message.end(), '\r', '#');
      std::replace(sanitized_commit_message.begin(), sanitized_commit_message.end(), '\n', '#');
      return sanitized_commit_message;
  - name: build_shell_command
    type: std::string
    body: |
      std::stringstream commit_everything_shell_command;
      std::string sanitized_commit_message = build_sanitized_commit_message();
      commit_everything_shell_command << "(cd "
                                      << current_project_directory
                                      << " && git commit -m "
                                      << "\"" << sanitized_commit_message << "\""
                                      << ")";
      return commit_everything_shell_command.str();
  - name: commit
    type: bool
    body: |
      std::string commit_everything_shell_command = build_shell_command();
      Blast::ShellCommandExecutorWithCallback executor(commit_everything_shell_command);
      executor.execute();
      return true;
    body_dependency_symbols:
      - std::stringstream
      - Blast::ShellCommandExecutorWithCallback
dependencies:
  - symbol: Blast::ShellCommandExecutorWithCallback
    headers: [ Blast/ShellCommandExecutorWithCallback.hpp ]
