#pragma once


#include <AllegroFlare/FontBin.hpp>
#include <Hexagon/ActionData.hpp>
#include <Hexagon/StageInterface.hpp>
#include <allegro5/allegro.h>
#include <functional>
#include <map>
#include <string>


namespace Hexagon
{
   namespace UI
   {
      class DrawingBox : public StageInterface
      {
      private:
         bool initialized;
         AllegroFlare::FontBin* font_bin;
         int width;
         int height;
         static ALLEGRO_EVENT a_default_empty_event;
         ALLEGRO_BITMAP* surface;
         bool stroking;
         bool erasing;
         int pointer_x;
         int pointer_y;
         std::map<std::string, std::function<bool(Hexagon::UI::DrawingBox&)>> events_dictionary;
         static std::string SAVE_SURFACE_TO_DESKTOP_WITH_AUTOGENERATED_NAME;

      public:
         DrawingBox(AllegroFlare::FontBin* font_bin=nullptr, int width=800, int height=600, std::map<std::string, std::function<bool(Hexagon::UI::DrawingBox&)>> events_dictionary=Hexagon::UI::DrawingBox::build_default_function_mapping());
         ~DrawingBox();

         void set_stroking(bool stroking);
         void set_erasing(bool erasing);
         void set_pointer_x(int pointer_x);
         void set_pointer_y(int pointer_y);

         bool get_initialized();
         int get_width();
         int get_height();
         bool get_stroking();
         bool get_erasing();
         static ALLEGRO_EVENT &get_a_default_empty_event_ref();
         std::map<std::string, std::function<bool(Hexagon::UI::DrawingBox&)>> &get_events_dictionary_ref();
      void initialize();
      void render() override;
      void process_event(ALLEGRO_EVENT& event=get_a_default_empty_event_ref()) override;
      void process_local_event(std::string event_name="", ActionData action_data=ActionData()) override;
      ALLEGRO_FONT* obtain_eurostile_title_font();
      void draw_crosshair();
      void destroy() override;
      static std::map<std::string, std::function<bool(Hexagon::UI::DrawingBox&)>> build_default_function_mapping();
      bool save_surface_to_desktop_with_autogenerated_name();
      };
   }
}



